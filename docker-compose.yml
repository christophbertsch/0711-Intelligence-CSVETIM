version: '3.8'

services:
  # Infrastructure
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: csv_guardian
      POSTGRES_USER: guardian
      POSTGRES_PASSWORD: guardian_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  # Monitoring
  jaeger:
    image: jaegertracing/all-in-one:1.47
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      COLLECTOR_OTLP_ENABLED: true

  # API Gateway
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://guardian:guardian_pass@postgres:5432/csv_guardian
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      REDIS_URL: redis://redis:6379
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
      API_HOST: 0.0.0.0
      API_PORT: 8000
    depends_on:
      - postgres
      - kafka
      - minio
      - redis
      - jaeger
    volumes:
      - ./api:/app
      - ./shared:/app/shared

  # Core Agents
  ingest-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    environment:
      AGENT_NAME: ingest
      DATABASE_URL: postgresql://guardian:guardian_pass@postgres:5432/csv_guardian
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - kafka
      - minio
      - jaeger
    volumes:
      - ./agents:/app
      - ./shared:/app/shared

  profiling-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    environment:
      AGENT_NAME: profiling
      DATABASE_URL: postgresql://guardian:guardian_pass@postgres:5432/csv_guardian
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - kafka
      - minio
      - jaeger
    volumes:
      - ./agents:/app
      - ./shared:/app/shared

  mapping-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    environment:
      AGENT_NAME: mapping
      DATABASE_URL: postgresql://guardian:guardian_pass@postgres:5432/csv_guardian
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - kafka
      - jaeger
    volumes:
      - ./agents:/app
      - ./shared:/app/shared

  validation-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    environment:
      AGENT_NAME: validation
      DATABASE_URL: postgresql://guardian:guardian_pass@postgres:5432/csv_guardian
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - kafka
      - jaeger
    volumes:
      - ./agents:/app
      - ./shared:/app/shared

  normalization-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    environment:
      AGENT_NAME: normalization
      DATABASE_URL: postgresql://guardian:guardian_pass@postgres:5432/csv_guardian
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - kafka
      - jaeger
    volumes:
      - ./agents:/app
      - ./shared:/app/shared

  persistence-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    environment:
      AGENT_NAME: persistence
      DATABASE_URL: postgresql://guardian:guardian_pass@postgres:5432/csv_guardian
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - kafka
      - jaeger
    volumes:
      - ./agents:/app
      - ./shared:/app/shared

  # Supporting Agents
  dq-reporter-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    environment:
      AGENT_NAME: dq_reporter
      DATABASE_URL: postgresql://guardian:guardian_pass@postgres:5432/csv_guardian
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - kafka
      - minio
      - jaeger
    volumes:
      - ./agents:/app
      - ./shared:/app/shared

  lineage-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    environment:
      AGENT_NAME: lineage
      DATABASE_URL: postgresql://guardian:guardian_pass@postgres:5432/csv_guardian
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - kafka
      - jaeger
    volumes:
      - ./agents:/app
      - ./shared:/app/shared

  export-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    environment:
      AGENT_NAME: export
      DATABASE_URL: postgresql://guardian:guardian_pass@postgres:5432/csv_guardian
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - kafka
      - minio
      - jaeger
    volumes:
      - ./agents:/app
      - ./shared:/app/shared

volumes:
  postgres_data:
  minio_data: